package graphic;

import java.io.File;
import java.util.ArrayList;

import javafx.scene.image.Image;
import utility.InputUtility;

public class ItemBox implements IRenderable{
	
	public static final ItemBox instance = new ItemBox();
	public static final int X = 0, Y = 0;
	private ArrayList<Image> boxTabImages = new ArrayList<>();
	private Image itemButtonImage;
	
	private boolean visible;
	
	private ItemBox() {
		// TODO Auto-generated constructor stub
		loadImage();
	}
	
	public void checkInput() {
		/*if (InputUtility.getMouseX() < 50 && InputUtility.getMouseY() ) {
			
		}*/
	}
	
	public void loadImage() {
		File file = new File("load\\img\\HUD\\ballbox.png");
		boxTabImages.add(new Image(file.toURI().toString()));
		file = new File("load\\img\\HUD\\itembox.png");
		boxTabImages.add(new Image(file.toURI().toString()));
		file = new File("load\\img\\HUD\\itembutton.png");
		itemButtonImage = new Image(file.toURI().toString());
	}

	@Override
	public void draw() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public int getDepth() {
		// TODO Auto-generated method stub
		return Integer.MAX_VALUE;
	}

	@Override
	public boolean isVisible() {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public void setVisible(boolean visible) {
		// TODO Auto-generated method stub
		this.visible = visible;
	}

	@Override
	public void show() {
		// TODO Auto-generated method stub
		IRenderableHolder.addFightObject(this);
		visible = true;
	}

	@Override
	public void hide() {
		// TODO Auto-generated method stub
		visible = false;
		IRenderableHolder.removeFightObject(this);
	}
	
	public Image getItemButtonImage() {
		return itemButtonImage;
	}

}
