package manager;

import java.util.ArrayList;

import graphic.IRenderableHolder;
import javafx.scene.input.KeyCode;
import logic.character.PlayerCharacter;
import logic.player.HumanPlayer;
import logic.terrain.WorldMap;
import logic.terrain.WorldObject;
import utility.Clock;
import utility.Function;
import utility.InputUtility;

public class WorldManager {
	
	private static PlayerCharacter player;
	private static ArrayList<WorldObject> worldObjects = new ArrayList<>();
	private static WorldMap worldMap;
	private static WorldObject space;
	
	public static PlayerCharacter getPlayer() {
		return player;
	}
	
	public WorldManager() {
		// TODO Auto-generated constructor stub
		WorldObject.loadObjectFunctions();
		WorldObject.loadWorldObjects();
		WorldObject.loadObjectImages();
		//WorldObject.loadMapObjects("load\\worldmap\\beta\\beta_object.txt");
		
		WorldObject.loadMapObjects("load\\worldmap\\littleroot\\littleroot_object.txt");
		new Clock();
		WorldMap.loadTileset();
		//worldMap = new WorldMap("load\\worldmap\\beta\\beta_map.txt");
		worldMap = new WorldMap("load\\worldmap\\littleroot\\littleroot_map.txt");
		player = new PlayerCharacter();
		IRenderableHolder.addWorldObjects(worldMap);

		space = WorldObject.createWorldObject(0, -1, -1);
		IRenderableHolder.removeWorldObjects(space);
		space.addOnEnter("-");
		space.addOnExit("-");
		IRenderableHolder.addWorldObjects(player);
		
		manage();
	}
	
	public static void manage() {
		/*player.turn(0);
		player.walk();
		player.walk();
		player.walk();
		player.turn(3);
		player.walk();
		player.walk();
		player.walk();
		player.turn(2);
		player.walk();
		player.walk();
		player.walk();*/
		while(true) {
			if(InputUtility.getKeyPressed(KeyCode.DOWN)) {
				if(player.getDirection() == 0) {
					if(!player.isPlaying()) {
						if(worldMap.getTerrainAt(player.getBlockX(), player.getBlockY() + 1) <= 0) {
							player.stuck();
						}
						else{
							player.walk();
						}
					}
				}
				else if(player.isMoving() && !player.isWalking()){
					if(worldMap.getTerrainAt(player.getBlockX(), player.getBlockY() + 1) <= 0) {
						player.setDirection(0);
						player.stuck();
					}
					else{
						player.setDirection(0);
						player.walk();
					}
				}
				else if(!player.isPlaying()){
					player.turn(0);
				}
			}
			else if(InputUtility.getKeyPressed(KeyCode.LEFT)) {
				if(player.getDirection() == 1) {
					if(!player.isPlaying()) {
						if(worldMap.getTerrainAt(player.getBlockX() - 1, player.getBlockY()) <= 0) {
							player.stuck();
						}
						else{
							player.walk();
						}
					}
				}
				else if(player.isMoving() && !player.isWalking()){
					if(worldMap.getTerrainAt(player.getBlockX() - 1, player.getBlockY()) <= 0) {
						player.setDirection(1);
						player.stuck();
					}
					else{
						player.setDirection(1);
						player.walk();
					}
				}
				else if(!player.isPlaying()){
					player.turn(1);
				}
			}
			else if(InputUtility.getKeyPressed(KeyCode.UP)) {
				if(player.getDirection() == 2) {
					if(!player.isPlaying()) {
						if(worldMap.getTerrainAt(player.getBlockX(), player.getBlockY() - 1) <= 0) {
							player.stuck();
						}
						else{
							player.walk();
						}
					}
				}
				else if(player.isMoving() && !player.isWalking()){
					if(worldMap.getTerrainAt(player.getBlockX(), player.getBlockY() - 1) <= 0) {
						player.setDirection(2);
						player.stuck();
					}
					else{
						player.setDirection(2);
						player.walk();
					}
				}
				else if(!player.isPlaying()){
					player.turn(2);
				}
			}
			else if(InputUtility.getKeyPressed(KeyCode.RIGHT)) {
				if(player.getDirection() == 3) {
					if(!player.isPlaying()) {
						if(worldMap.getTerrainAt(player.getBlockX() + 1, player.getBlockY()) <= 0) {
							player.stuck();
						}
						else{
							player.walk();
						}
					}
				}
				else if(player.isMoving() && !player.isWalking()){
					if(worldMap.getTerrainAt(player.getBlockX() + 1, player.getBlockY()) <= 0) {
						player.setDirection(3);
						player.stuck();
					}
					else{
						player.setDirection(3);
						player.walk();
					}
				}
				else if(!player.isPlaying()){
					player.turn(3);
				}
			}
			else if(!player.isStucking() && !player.isWalking()) {
				player.setMoving(false);
			}
			Clock.tick();
		}
	}
	
	public static void addWorldObjects(WorldObject worldObject){
		worldObjects.add(worldObject);
	}
	
	public static WorldObject getObjectAt(int x, int y) {
		for (WorldObject worldObject : worldObjects) {
			if (worldObject.getBlockX() == x && worldObject.getBlockY() == y) {
				return worldObject;
			}
		}
		return space;
	}
	
	public static void loadWorld(String mapName) {
		worldMap = new WorldMap("load\\worldmap\\" + mapName + "\\" + mapName + "_map.txt");
		worldObjects.clear();
		IRenderableHolder.clearObjects();
		WorldObject.loadMapObjects("load\\worldmap\\" + mapName + "\\" + mapName + "_object.txt");
		player.setX(worldMap.getPlayerStartX() * 32);
		player.setY(worldMap.getPlayerStartY() * 32);
		player.setBlockX(worldMap.getPlayerStartX());
		player.setBlockY(worldMap.getPlayerStartY());
	}

}
