package graphic;

import java.awt.RenderingHints.Key;

import javafx.animation.AnimationTimer;
import javafx.event.EventHandler;
import javafx.scene.Scene;
import javafx.scene.SnapshotParameters;
import javafx.scene.image.WritableImage;
import javafx.scene.input.KeyCharacterCombination;
import javafx.scene.input.KeyCode;
import javafx.scene.input.KeyCodeCombination;
import javafx.scene.input.KeyCombination;
import javafx.scene.input.MouseButton;
import javafx.scene.layout.Pane;
import javafx.scene.paint.Color;
import javafx.stage.Stage;
import javafx.stage.WindowEvent;
import utility.InputUtility;

public class GameStage extends Stage {
	
	private static GameScreen canvas;
	private static FullScreen fullCanvas;
	private static Scene normalScene;
	private static Scene fullScene;

	public GameStage() {
		super();
		setTitle("Progemon");
		canvas = new GameScreen();
		fullCanvas = new FullScreen();
		Pane root = new Pane();
		root.getChildren().add(canvas);
		Pane root2 = new Pane();
		root2.getChildren().add(fullCanvas);
		normalScene = new Scene(root, GameScreen.WIDTH, GameScreen.HEIGHT, Color.DARKGRAY);
		fullScene = new Scene(root2, FullScreen.WIDTH, FullScreen.HEIGHT, Color.BLACK);
		setScene(normalScene);
		addListener(normalScene);
		addListener(fullScene);
		setX(0);
		setY(0);
		setResizable(false);
		setFullScreenExitKeyCombination(new KeyCodeCombination(KeyCode.F12));
		setFullScreenExitHint("Press F12 to exit full-screen mode.");
		sizeToScene();
		new AnimationTimer() {

			@Override
			public void handle(long now) {
				try {
					GameScreen.repaint();		
				} catch (Exception e) {
					// TODO: handle exception
				}
				if (getScene() == fullScene) {
					FullScreen.repaint();	
				}
			}
		}.start();
		show();
	}

	public void addListener(Scene scene) {
		scene.setOnMousePressed(mEvent -> {
			if (mEvent.getButton().equals(MouseButton.PRIMARY)) {
				InputUtility.setMouseLeftClick(true);
			} else if (mEvent.getButton().equals(MouseButton.SECONDARY)) {
				InputUtility.setMouseRightClick(true);
			}
		});

		scene.setOnMouseReleased(mEvent -> {
			if (mEvent.getButton().equals(MouseButton.PRIMARY)) {
				InputUtility.setMouseLeftPress(false);
			} else if (mEvent.getButton().equals(MouseButton.SECONDARY)) {
				InputUtility.setMouseRightPress(false);
			}
		});

		scene.setOnMouseEntered(mEvent -> {
			InputUtility.setMouseOnScreen(true);
		});

		scene.setOnMouseExited(mEvent -> {
			InputUtility.setMouseOnScreen(false);
		});

		scene.setOnMouseMoved(mEvent -> {
			InputUtility.setMouseX((int) mEvent.getX());
			InputUtility.setMouseY((int) mEvent.getY());
		});

		scene.setOnKeyPressed(kEvent -> {
			System.out.println("KEY PRESSED : " + kEvent.getCode().toString());
			InputUtility.setKeyPressed(kEvent.getCode(), true);
			InputUtility.setKeyTriggered(kEvent.getCode(), true);
			if (kEvent.getCode() == KeyCode.F12) {
				if (getScene().equals(normalScene)) {
					setScene(fullScene);
					setFullScreen(true);
				}
				else{
					setScene(normalScene);
				}
			}
		});

		scene.setOnKeyReleased(kEvent -> {
			InputUtility.setKeyPressed(kEvent.getCode(), false);
			InputUtility.setKeyTriggered(kEvent.getCode(), false);
		});
		
		System.out.println("Stage Finished Adding Listener");
	}
	
	public static GameScreen getCanvas() {
		return canvas;
	}

}
